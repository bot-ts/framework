# Choose the base image according to the runtime
<% if (runtime === 'bun') { %>
FROM oven/bun:latest
<% } else if (runtime === 'node') { %>
FROM node:latest
<% } else if (runtime === 'deno') { %>
FROM denoland/deno:alpine
<% } %>

# Set the working directory
WORKDIR /app

# Copy the necessary files for dependency installation
COPY package.json .
COPY <%- lockfile %> .

# Install dependencies based on the package manager
<% if (packageManager === 'bun') { %>
RUN bun install
<% } else if (packageManager === 'npm') { %>
RUN npm install
<% if (client === 'sqlite3' && runtime === 'node') { %>
RUN npm rebuild sqlite3
<% } %>
<% } else if (packageManager === 'yarn') { %>
RUN yarn install
<% if (client === 'sqlite3' && runtime === 'node') { %>
RUN yarn rebuild sqlite3
<% } %>
<% } else if (packageManager === 'pnpm') { %>
RUN pnpm install
<% if (client === 'sqlite3' && runtime === 'node') { %>
RUN pnpm rebuild sqlite3
<% } %>
<% } else if (packageManager === 'deno') { %>
RUN deno install --global --allow-read --allow-write --allow-net --allow-env --allow-run
<% } %>

# Copy the remaining files into the container
COPY . .

# Build and run command
<% if (runtime === 'bun') { %>
CMD ["bun", "run", "start"]
<% } else if (runtime === 'node') { %>
RUN npm build
CMD ["node", "dist/index.js"]
<% } else if (runtime === 'deno') { %>
CMD ["deno", "run", "--allow-read", "--allow-write", "--allow-net", "--allow-env", "--allow-run", "src/index.ts"]
<% } %>
