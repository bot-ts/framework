name: Factory Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  node:
    if: github.repository == 'bot-ts/framework'
    name: Test on Node.js v22
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      LOCKFILE_npm: lockfiles/package-lock.json
      LOCKFILE_yarn: lockfiles/yarn.lock
      LOCKFILE_pnpm: lockfiles/pnpm-lock.yaml
      CI_npm: npm ci
      CI_yarn: yarn install --frozen-lockfile
      CI_pnpm: pnpm install --frozen-lockfile
      ADD_npm: npm install
      ADD_yarn: yarn add
      ADD_pnpm: pnpm add

    strategy:
      matrix:
        package-manager: [npm, yarn, pnpm]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install package manager
        run: |
          if [ "${{ matrix.package-manager }}" != "npm" ]; then
            if [ "${{ matrix.package-manager }}" == "yarn" ]; then
              npm install -g yarn@latest # or @berry for advanced features
            else
              npm install -g ${{ matrix.package-manager }}@latest
            fi
          else
            echo "npm is already installed"
          fi

      - name: Copy lockfile
        run: |
          rm -f bun.lockb
          LOCKFILE_VAR="LOCKFILE_${{ matrix.package-manager }}"
          cp "${!LOCKFILE_VAR}" ./

      - name: Install dependencies
        run: |
          CI_VAR="CI_${{ matrix.package-manager }}"
          ADD_VAR="ADD_${{ matrix.package-manager }}"
          
          ${!CI_VAR}
          ${!ADD_VAR} @rollup/rollup-linux-x64-gnu

      - name: Check typings
        if: matrix.package-manager == 'npm'
        run: npx tsc --noEmit

      - name: Build JS
        run: npx rimraf dist && npx rollup -c && node scripts/copy-keepers.js

      - name: Start the bot
        run: node dist/index.test.js

  bun:
    if: github.repository == 'bot-ts/framework'
    name: Test on Bun v1.2.4
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.4

      - name: Install dependencies
        run: bun install

      - name: Start the bot
        env:
          BOT_MODE: test
        run: bun run src/index.test.ts

  deno:
    if: github.repository == 'bot-ts/framework'
    name: Test on Deno v2.2.2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: 2.2.2

      - name: Install dependencies
        run: deno install --allow-scripts

      - name: Start the bot
        env:
          BOT_MODE: test
        run: deno -A src/index.test.ts
